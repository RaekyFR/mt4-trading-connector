
// nodejs/scripts/reset-db.js
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function resetDatabase() {
  console.log('‚ö†Ô∏è  R√©initialisation de la base de donn√©es...');
  
  const confirm = process.argv[2] === '--force';
  if (!confirm) {
    console.log('Utilisez --force pour confirmer la r√©initialisation');
    process.exit(1);
  }

  try {
    // Supprimer toutes les donn√©es dans l'ordre inverse des d√©pendances
    await prisma.auditLog.deleteMany({});
    console.log('‚úÖ Logs d\'audit supprim√©s');

    await prisma.riskMetric.deleteMany({});
    console.log('‚úÖ M√©triques de risk supprim√©es');

    await prisma.order.deleteMany({});
    console.log('‚úÖ Ordres supprim√©s');

    await prisma.signal.deleteMany({});
    console.log('‚úÖ Signaux supprim√©s');

    await prisma.riskConfig.deleteMany({});
    console.log('‚úÖ Configurations de risk supprim√©es');

    await prisma.strategy.deleteMany({});
    console.log('‚úÖ Strat√©gies supprim√©es');

    await prisma.accountState.deleteMany({});
    console.log('‚úÖ √âtats de compte supprim√©s');

    console.log('\nüîß Base de donn√©es r√©initialis√©e !');
    console.log('Ex√©cutez "npm run init-db" pour recr√©er les donn√©es de base');

  } catch (error) {
    console.error('‚ùå Erreur lors de la r√©initialisation:', error);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

resetDatabase();
